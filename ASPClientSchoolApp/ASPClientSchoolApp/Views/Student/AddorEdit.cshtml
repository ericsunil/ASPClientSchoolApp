@model ASPClientSchoolApp.Models.StudentTable

@{
    ViewBag.Title = "AddorEdit";
    Layout = null;
}


@using (Html.BeginForm("AddorEdit", "Student", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return jQueryAjaxPost(this);", data_resetUrl = Url.Action("AddorEdit", "Student", new { id = 0 }) })) //data-resetUrl
{
    @Html.AntiForgeryToken()

<div class="row">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.StudentID)
    <div class="col-sm-6 b-r">
        <div class="form-group">
            @Html.LabelFor(model => model.GradeToken, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.GradeToken, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GradeToken, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParentToken, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.ParentToken, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ParentToken, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="col-sm-6">
        <div class="form-group hidden-lg hidden-md hidden-sm hidden-xs">
            @Html.LabelFor(model => model.ImageToken, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.ImageToken, new { htmlAttributes = new { @class = "form-control", @Value="2222" } })
                @Html.ValidationMessageFor(model => model.ImageToken, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label" })

            <div>
                <img src="@Url.Content(Model.ImagePath)" style="margin: 10px; height:200px; width:auto;" id="imagePreview" />
                <div class="clearfix"></div>
                <div class="fileinput fileinput-new" data-provides="fileinput">
                    <span class="btn btn-default btn-file"><span class="fileinput-new">Select file</span><span class="fileinput-exists">Change</span><input type="file" name="ImageUpload" accept="image/jpeg, image/png" onchange="ShowImagePreview(this,document.getElementById('imagePreview')"></span>
                    <span class="fileinput-filename"></span>
                    <a href="#" class="close fileinput-exists" data-dismiss="fileinput" style="float: none">&times;</a>
                </div>
            </div>
        </div>
    </div>


    <div class="clearfix"></div>
    <div>
        <button class="btn btn-sm btn-primary pull-right m-t-n-xs" type="submit"><strong>Save</strong></button>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
