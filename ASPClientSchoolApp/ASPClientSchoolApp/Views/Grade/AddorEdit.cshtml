@model ASPClientSchoolApp.Models.Grade

@{
    ViewBag.Title = "AddorEdit";
    Layout = null;
}


@using (Html.BeginForm("AddorEdit", "Grade", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return jQueryAjaxPost(this);", data_resetUrl = Url.Action("AddorEdit", "Grade", new { id = 0 }) })) //data-resetUrl
{
    @Html.AntiForgeryToken()


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.GradeID)

    <div class="form-group">
        @Html.LabelFor(model => model.GradeToken, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.GradeToken, new { htmlAttributes = new { @class = "form-control", @Value="100" } })
            @Html.ValidationMessageFor(model => model.GradeToken, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClassAlpha, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.ClassAlpha, new { htmlAttributes = new { @class = "form-control", placeholder = "Class Name in Alphabet here..." } })
            @Html.ValidationMessageFor(model => model.ClassAlpha, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClassRoman, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.ClassRoman, new { htmlAttributes = new { @class = "form-control", placeholder = "Class Name in Roman here..." } })
            @Html.ValidationMessageFor(model => model.ClassRoman, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClassNumeric, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.ClassNumeric, new { htmlAttributes = new { @class = "form-control",min="1", max="10", placeholder = "Class Name in Numeric here..." } })
            @Html.ValidationMessageFor(model => model.ClassNumeric, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Section, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.Section, new { htmlAttributes = new { @class = "form-control", placeholder = "Section here..." } })
            @Html.ValidationMessageFor(model => model.Section, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <button class="btn btn-sm btn-primary pull-right m-t-n-xs" type="submit"><strong>Save</strong></button>
    </div>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

